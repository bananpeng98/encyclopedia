#+title: Clustering coefficient
#+roam_tags: graph theory clustering coefficient

* Setup :noexport:
#+call: init()
#+call: init-plot-style()

* Lib :noexport:
:PROPERTIES:
:header-args: :tangle encyclopedia/clustering_coefficient.py :results silent
:END:

#+begin_src jupyter-python
def clustering_coefficient(A):
    triangles = np.trace(np.linalg.matrix_power(A, 3)) / 6
    k = A.sum(axis=0)
    triples = np.sum(np.multiply(k,(k-1))/2)
    return triangles*3/triples
#+end_src

* Clustering coefficient
The clustering coefficient measures the degree to which nodes in a graph tend to
cluster. See Figure ref:fig:clust_small_world for a [[file:20210224212824-small_world_network.org][small world network]] with a
clustering coefficient of $C\approx 0.34$.

#+name: src:fig:clust_small_world
#+begin_src jupyter-python :results output
n = 64
c = 8
p = 0.9
G = small_world(n, c, p)
A = nx.to_numpy_matrix(G)
C = clustering_coefficient(A)

pos = nx.spring_layout(G, iterations=1000)
plt.figure(figsize=(4, 4))
draw_graph(G, pos)
plt.title(f"$C={C:.6f}$")
#+end_src

#+caption: A small world network with $n=64$, $c=16$ and $p=0.1$. These parameters gives a clustering coefficient of $C\approx 0.34$.
#+label: fig:clust_small_world
#+RESULTS: src:fig:clust_small_world
[[file:./.ob-jupyter/a33a51c10af84ba2e2c97c273aa85c36d1a45cdd.png]]
