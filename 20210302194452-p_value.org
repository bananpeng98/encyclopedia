#+title: p-value
#+roam_tags: statistics p-value

#+call: init()

#+begin_src jupyter-python :lib yes
from enum import Enum
from sympy import *
from sympy.stats import *
from pyorg.latex import *
from encyclopedia.statistics import *
#+end_src

#+RESULTS:

#+begin_src jupyter-python :lib yes
left_tailed = Latex('left')
right_tailed = Latex('right')
two_tailed = Latex('two')
#+end_src

#+RESULTS:

* p-value
#+begin_src jupyter-python :lib yes
p = Symbol('p')
def calculate_p_value(statistic, distribution, side):
    if side == right_tailed:
        prob = Probability(T >= t)
    elif side == left_tailed:
        prob = Probability(T <= t)
    else:
        prob = Probability(abs(T) >= abs(t))
    return LCalculation(
        LSubsStep(p, prob),
        LSubsStep([(t, statistic), (T, distribution)]),
        LDoitStep(),
    ).steps(p).rdups()
#+end_src

#+RESULTS:

#+begin_src jupyter-python
calculate_p_value(Rational(2, 3), Normal('Z', 0, 1), left_tailed).evalf()
#+end_src

#+RESULTS:
:RESULTS:
\begin{equation}\begin{aligned}
p&=P[T \leq t]=\\
&=P[Z \leq \frac{2}{3}]=\\
&=0.747507462453077
\end{aligned}\end{equation}
:END:
