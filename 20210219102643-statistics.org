#+title: Statistics

* Setup :noexport:
#+call: init()
#+call: init-plot-style()

* Lib :noexport:
:PROPERTIES:
:header-args: :tangle encyclopedia/statistics.py :results silent
:END:

#+begin_src jupyter-python
from sympy import *
from sympy.stats import *
from sympy.stats.rv import RandomSymbol
from pyorg.latex import *
import numpy as np
import matplotlib.pyplot as plt
#+end_src

#+begin_src jupyter-python
class Prob(Probability):
    def _latex(self, printer):
        if len(self.args) > 1:
            return f"P[{printer._print(self.args[0])}|{printer._print(self.args[1])}]"
        else:
            return f"P[{printer._print(self.args[0])}]"
class Expected(Expectation):
    def _latex(self, printer):
        return f"E[{printer._print(self.args[0])}]"
#+end_src

#+begin_src jupyter-python
mu, sigma, n, xm, s, x, z, t = symbols('mu sigma n \\bar{x} s x z t')
T = RandomSymbol('T')
#+end_src

* Statistics

- [[file:20210219100101-random_sampling.org][Random sampling]]
- [[file:20210219103418-distributions.org][Distributions]]
- [[file:20210228004304-confidence_interval.org][Confidence interval]]
- [[file:20210219100256-hypothesis_testing.org][Hypothesis testing]]
- [[file:20210219100345-bayesian_inference.org][Bayesian inference]]
- [[file:20210226085840-linear_least_squares.org][Linear least squares]]
